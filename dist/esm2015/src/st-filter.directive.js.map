{"version":3,"file":"st-filter.directive.js","sourceRoot":"","sources":["../package/src/st-filter.directive.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAqB,UAAU,EAAC,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AACjD,OAAO,EAAC,MAAM,EAAC,MAAM,kBAAkB,CAAC;AACxC,OAAO,EAAC,SAAS,EAAe,MAAM,YAAY,CAAC;AAEnD,OAAO,EAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,EAAC,MAAM,gBAAgB,CAAC;;;;AAMvE,MAAM;;;;;IAIF,YAAoB,KAAoB,EAAU,GAAe;QAA7C,UAAK,GAAL,KAAK,CAAe;QAAU,QAAG,GAAH,GAAG,CAAY;;;qBAShC,GAAG;KARnC;;;;;IAUD,MAAM,CAAC,KAAa;QAChB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACxC;;;;IAED,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACrB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;SAClB,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;aAC/D,IAAI,CACD,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,mBAAmB,MAAM,CAAC,MAAM,EAAC,CAAC,KAAK,CAAC,EAC7D,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EACxB,oBAAoB,EAAE,CACzB;aACA,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KACvC;;;;IAED,WAAW;QACP,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;KACzC;;;YA1CJ,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE,UAAU;aACvB;;;;YATO,UAAU;YAD2B,UAAU;;;wBAkBlD,KAAK,SAAC,UAAU;yBAEhB,KAAK,SAAC,kBAAkB;qBAExB,KAAK,SAAC,cAAc;sBAEpB,KAAK,SAAC,gBAAgB","sourcesContent":["import {Directive, Input, OnInit, OnDestroy, ElementRef} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {filter} from 'smart-table-core';\nimport {fromEvent, Subscription} from 'rxjs/index';\nimport {FilterOperator, FilterType} from './common-types';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n@Directive({\n    selector: '[stFilter]',\n    exportAs: 'stFilter'\n})\nexport class StFilterDirective<T> implements OnInit, OnDestroy {\n    private _directive: any;\n    private _inputSubscription: Subscription;\n\n    constructor(private table: SmartTable<T>, private _el: ElementRef) {\n    }\n\n    @Input('stFilter') pointer: string;\n\n    @Input('stFilterOperator') operator = FilterOperator.INCLUDES;\n\n    @Input('stFilterType') type = FilterType.STRING;\n\n    @Input('stDebounceTime') delay = 300;\n\n    filter(value: string): void {\n        return this._directive.filter(value);\n    }\n\n    ngOnInit() {\n        this._directive = filter({\n            pointer: this.pointer,\n            table: this.table,\n            operator: this.operator,\n            type: this.type\n        });\n        this._inputSubscription = fromEvent(this._el.nativeElement, 'input')\n            .pipe(\n                map(($event: any) => (<HTMLInputElement>$event.target).value),\n                debounceTime(this.delay),\n                distinctUntilChanged(),\n            )\n            .subscribe(v => this.filter(v));\n    }\n\n    ngOnDestroy() {\n        this._directive.off();\n        this._inputSubscription.unsubscribe();\n    }\n}\n"]}