{"version":3,"file":"smart-table.service.js","sourceRoot":"","sources":["../../src/smart-table.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {table as stTable} from 'smart-table-core';\nimport {SearchState, SliceState, SortState, StEvents} from './commont-types';\nimport {TableState} from './table-state';\nimport {Injectable} from '@angular/core';\nimport {from, Subscription, Observable, ObservableInput, of} from 'rxjs/index';\nimport {OnDestroy} from '@angular/core';\n\n@Injectable()\nexport class SmartTable<T> implements OnDestroy {\n    private _directive: any;\n    private _subscription: Subscription;\n    private _data: T[];\n\n    static of<U>(data: U[] = [], tableState = new TableState(), factory = stTable) {\n        return new SmartTable<U>(of(data), tableState, factory);\n    }\n\n    static from<U>(data: ObservableInput<U[]>, tableState = new TableState(), factory = stTable) {\n        return new SmartTable<U>(from(data), tableState, factory);\n    }\n\n    private constructor(private _source: Observable<T[]>, tableState: TableState, factory: Function) {\n        const dataArray: T[] = [];\n        this._data = dataArray;\n        this._directive = factory({data: dataArray, tableState});\n    }\n\n    init(): void {\n        this._directive.dispatch(StEvents.EXEC_CHANGED, {working: true});\n        this._subscription = this._source\n            .subscribe((data: T[]) => {\n                this._data.splice(0, 0, ...data);\n                this._directive.exec();\n            });\n    }\n\n    use(data: T[]) {\n        this._subscription.unsubscribe();\n        this._source = of(data);\n        this._directive.dispatch(StEvents.EXEC_CHANGED, {working: true});\n        this._subscription = this._source\n            .subscribe((values: T[]) => {\n                this._data.splice(0, 0, ...values);\n                this._directive.exec();\n            });\n    }\n\n    sort(newState: SortState): void {\n        return this._directive.sort(newState);\n    }\n\n    filter(newState: Object): void {\n        return this._directive.filter(newState);\n    }\n\n    search(newState: SearchState): void {\n        return this._directive.search(newState);\n    }\n\n    slice(newState: SliceState): void {\n        return this._directive.slice(newState);\n    }\n\n    on(event: string, ...listeners: Function[]): SmartTable<T> {\n        this._directive.on(event, ...listeners);\n        return this;\n    }\n\n    off(event?: string, ...listeners: Function[]): SmartTable<T> {\n        this._directive.off(event, ...listeners);\n        return this;\n    }\n\n    onDisplayChange(handler: Function): void {\n        return this._directive.onDisplayChange(handler);\n    }\n\n    getTableState(): TableState {\n        return this._directive.getTableState();\n    }\n\n    getMatchingItems(): T[] {\n        return this._directive.getMatchingItems();\n    }\n\n    ngOnDestroy(): void {\n        this._subscription.unsubscribe();\n        this._directive.off();\n    }\n}\n"]}